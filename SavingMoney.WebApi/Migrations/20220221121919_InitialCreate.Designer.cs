// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SavingMoney.WebApi.Db;

#nullable disable

namespace SavingMoney.WebApi.Migrations
{
    [DbContext(typeof(SavingMoneyContext))]
    [Migration("20220221121919_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("SavingMoney")
                .HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("SavingMoney.WebApi.Model.Cost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddedBy")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("CostSubCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Currency")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeSpentUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CostSubCategoryId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("Id", "OrganizationId")
                        .IsUnique();

                    b.ToTable("Costs", "SavingMoney");
                });

            modelBuilder.Entity("SavingMoney.WebApi.Model.CostCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("Id", "OrganizationId")
                        .IsUnique();

                    b.ToTable("CostCategories", "SavingMoney");
                });

            modelBuilder.Entity("SavingMoney.WebApi.Model.CostSubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("ParentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("Id", "ParentId")
                        .IsUnique();

                    b.ToTable("CostSubCategories", "SavingMoney");
                });

            modelBuilder.Entity("SavingMoney.WebApi.Model.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Organizations", "SavingMoney");
                });

            modelBuilder.Entity("SavingMoney.WebApi.Model.OrgUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers", "SavingMoney", t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("SavingMoney.WebApi.Model.PredictedSubcategoryCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddedBy")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("CostSubCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Currency")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PredictedMonth")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CostSubCategoryId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("Id", "OrganizationId")
                        .IsUnique();

                    b.ToTable("PredictedSubcategoryCosts", "SavingMoney");
                });

            modelBuilder.Entity("SavingMoney.WebApi.Model.Cost", b =>
                {
                    b.HasOne("SavingMoney.WebApi.Model.CostSubCategory", null)
                        .WithMany()
                        .HasForeignKey("CostSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SavingMoney.WebApi.Model.Organization", null)
                        .WithMany("Costs")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SavingMoney.WebApi.Model.CostCategory", b =>
                {
                    b.HasOne("SavingMoney.WebApi.Model.Organization", null)
                        .WithMany("Categories")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SavingMoney.WebApi.Model.CostSubCategory", b =>
                {
                    b.HasOne("SavingMoney.WebApi.Model.CostCategory", null)
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SavingMoney.WebApi.Model.PredictedSubcategoryCost", b =>
                {
                    b.HasOne("SavingMoney.WebApi.Model.CostSubCategory", null)
                        .WithMany()
                        .HasForeignKey("CostSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SavingMoney.WebApi.Model.Organization", null)
                        .WithMany("PredictedSubcategoryCosts")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SavingMoney.WebApi.Model.Organization", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Costs");

                    b.Navigation("PredictedSubcategoryCosts");
                });
#pragma warning restore 612, 618
        }
    }
}
